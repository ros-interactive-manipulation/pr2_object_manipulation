<launch>
    <arg name="kinect_camera_name" default="head_mount_kinect"/>
    <arg name="high_res" default="false"/>
	<arg name="sim" default="false"/>

    <!-- RGB-D Assembler Node -->
	<group unless="$(arg sim)">
      <node name="rgbd_assembler_kinect" type="rgbd_assembler_kinect"
            pkg="rgbd_assembler" output="screen" respawn="false">
        <param if="$(arg high_res)" name="image_topic" value="/$(arg kinect_camera_name)/depth_registered/points_image"/>
        <param unless="$(arg high_res)" name="image_topic" value="/$(arg kinect_camera_name)/rgb/image_color"/>
        <param name="disparity_image_topic" value="/$(arg kinect_camera_name)/depth_registered/disparity"/>
        <param name="camera_info_topic" value="/$(arg kinect_camera_name)/depth_registered/camera_info"/>
        <param name="point_cloud_topic" value="/$(arg kinect_camera_name)/depth_registered/points"/>
		<param name="use_disparity_image" value="false"/>
      </node>

      <!-- point cloud to image converter (makes sure the image has the same resolution as the point cloud) -->
      <group if="$(arg high_res)">
        <node name="kinect_points_to_image" pkg="pcl_ros" type="convert_pointcloud_to_image">
	    <remap from="input" to="/$(arg kinect_camera_name)/depth_registered/points"/>
	    <remap from="output" to="/$(arg kinect_camera_name)/depth_registered/points_image"/>
        </node>
      </group>

    </group>

    <group if="$(arg sim)">
      <node name="rgbd_assembler_kinect" type="rgbd_assembler_kinect"
            pkg="rgbd_assembler" output="screen" respawn="false">
        <param name="image_topic" value="/$(arg kinect_camera_name)/depth_registered/points_image"/>
        <param name="camera_info_topic" value="/$(arg kinect_camera_name)/rgb/camera_info"/>
        <param name="point_cloud_topic" value="/$(arg kinect_camera_name)/depth_registered/points"/>
		<param name="use_disparity_image" value="false"/>
      </node>

      <!-- point cloud to image converter (makes sure the image has the same resolution as the point cloud) -->
	  <node name="kinect_points_to_image" pkg="pcl_ros" type="convert_pointcloud_to_image">
	    <remap from="input" to="/$(arg kinect_camera_name)/depth_registered/points"/>
	    <remap from="output" to="/$(arg kinect_camera_name)/depth_registered/points_image"/>
      </node>
    </group>
    
</launch>
