<launch>

  <arg name="stereo" default="true"/>
  <arg name="tod" default="false"/>
  <arg name="high_res" default="false"/>
  <arg name="sim" default="false"/>
  <arg name="flatten_table" default="false"/>
  <arg name="model_set" default="REDUCED_MODEL_SET"/>
  <arg name="kinect_camera_name" default="head_mount_kinect" />
  <arg name="im_debug" default="false"/>
  <arg name="new_object_rec" default="false"/>
  <arg name="hod_cfg" default="$(find household_objects_database)/config/wgs36.yaml" />

  <!-- we need to know if we are using the lcg since we start the database connection node here
    which should not randomize grasps when using the lcg, since we want the envelopping grasps first -->
  <arg name="lcg_left_gripper" default="false"/>

  <!-- database communication node -->
  <rosparam command="load" file="$(arg hod_cfg)"/>
  <node pkg="household_objects_database" name="objects_database_node" type="objects_database_node" 
    respawn="true" output="screen">
    <param if="$(arg lcg_left_gripper)" name="grasp_ordering_method" value="quality"/>
    <param unless="$(arg lcg_left_gripper)" name="grasp_ordering_method" value="random"/>
  </node>

  <arg if="$(arg im_debug)" name="im_prefix" value="xterm -e gdb -ex run --args"/>
  <arg unless="$(arg im_debug)" name="im_prefix" value=""/>

  <!-- backend node -->
  <node name="pr2_interactive_object_detection_backend" type="pr2_interactive_object_detection_backend" 
    pkg="pr2_interactive_object_detection" output="screen" respawn="false"
	launch-prefix="$(arg im_prefix)">
    <remap from="tabletop_detection" to="object_recognition_translated"/>
    <param if="$(arg tod)" name="min_marker_quality" value="0.003" />
    <param unless="$(arg tod)" name="min_marker_quality" value="0.005" />
    <param name="robot_reference_frame_id" value="base_link" />
    <param name="table_x" value="1" />
    <param name="table_y" value="0" />
    <param name="table_z" value="0" />
    <param name="table_thickness" value=".01"/>
  </node>

  <!-- Launch TOD (textured object detection) -->
  <group if="$(arg tod)">
    <!-- TODO: update for new TOD
    <include file="$(find object_recognition_server)/server.robot.launch"/>
    <node type="recognition_translator" name="recognition_translator" pkg="pr2_interactive_object_detection" 
	  output="screen"/>
    -->
  </group>

  <!-- Narrow stereo -->
  <group if="$(arg stereo)">
  
    <!-- RGB-D assembly -->
    <include file="$(find rgbd_assembler)/launch/rgbd_assembler.launch"/> 

    <!-- Launch default tabletop detector -->
    <include file="$(find tabletop_object_detector)/launch/tabletop_complete.launch">
      <arg name="tabletop_segmentation_points_input" value="narrow_stereo_textured/points2"/>
      <arg name="flatten_table" value="$(arg flatten_table)"/>	
      <arg name="model_set" value="$(arg model_set)"/>
    </include>
    
  </group>


  <!-- Kinect -->
  <group unless="$(arg stereo)">
  
    <!-- RGB-D assembly -->
    <include file="$(find rgbd_assembler)/launch/rgbd_kinect_assembler.launch">
      <arg name="kinect_camera_name" value="$(arg kinect_camera_name)"/>
      <arg name="high_res" value="$(arg high_res)"/>      
	  <arg name="sim" value="$(arg sim)"/>
    </include>

    <!-- Launch default tabletop detector -->
    <include file="$(find tabletop_object_detector)/launch/tabletop_complete.launch">
      <arg name="tabletop_segmentation_points_input" value="$(arg kinect_camera_name)/depth_registered/points"/>
      <arg name="flatten_table" value="$(arg flatten_table)"/>	
      <arg name="model_set" value="$(arg model_set)"/> 
    </include>

    <node if="$(arg new_object_rec)" name="object_recognizer" type="detection" pkg="object_recognition_core"
          args="-c $(find pr2_interactive_object_detection)/pipelines/config_detection.tabletop_table">
      <remap from="/camera/depth_registered/image" to="/$(arg kinect_camera_name)/depth_registered/image"/>
      <remap from="/camera/rgb/image_color" to="/$(arg kinect_camera_name)/rgb/image_color"/>
      <remap from="/camera/rgb/camera_info" to="/$(arg kinect_camera_name)/rgb/camera_info"/>
      <remap from="/camera/depth_registered/camera_info" to="/$(arg kinect_camera_name)/depth_registered/camera_info"/>
    </node>
 
  </group>

</launch>
